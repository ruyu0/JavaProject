一、饿汉式是立即加载的方式，无论是否会用到这个对象，都会加载。
如果在构造方法里写了性能消耗较大，占时较久的代码，比如建立与数据库的连接，那么就会在启动的时候感觉稍微有些卡顿。

懒汉式，是延迟加载的方式，只有使用的时候才会加载。 并且有线程安全的考量(鉴于同学们学习的进度，暂时不对线程的章节做展开)。
使用懒汉式，在启动的时候，会感觉到比饿汉式略快，因为并没有做对象的实例化。 但是在第一次调用的时候，会进行实例化操作，感觉上就略慢。

看业务需求，如果业务上允许有比较充分的启动和初始化时间，就使用饿汉式，否则就使用懒汉式

见程序TestGiantDragonLazySingleton和TestGiantDragon
这个是面试的时候经常会考的点，面试题通常的问法是:
什么是单例模式？
回答的时候，要答到三元素
1. 构造方法私有化
2. 静态属性指向实例
3. public static的 getInstance方法，返回第二步的静态属性

17:36 2020/12/22用单例模式写水龙 见程序TestWaterDragon

17:50 2020/12/22
二、静态变量和成员变量有默认值：基本数据类型：int = 0, long = 0, double = 0.0, float = 0.0, boolean = false, char = 0; 对象数据类型：默认值都为null
局部变量没有默认值，需要初始化；
数值new操作有默认值

三、枚举的好处：限定取值范围

四、接口 （见程序ADHero、APHero、ADAPHero）

五、引用类型和对象类型之间的类型转换(见程序Test）
子类向父类直接转换（向上转型）
父类向子类转换（向下转型）看情况，父类指向的类型如果刚好是子类的类型则可以，不同则可能发生类型转换异常ClassCastException
实现类向接口转型（向上）直接
接口转实现类（向下）看情况

17:35 2020/12/24
六、instanceof Hero 判断一个引用所指向的对象，是否是Hero类型，或者Hero的子类实例

七、多态（见程序）
变量的声明类型都是同一个类型，调用同一个方法，却能呈现不同的状态（子类重写了父类的方法）
条件：1. 父类（接口）引用指向子类对象 	2. 调用的方法有重写
不使用多态的话，同一个方法需要分别命名设计
！！！类静态方法不支持多态，根据声明类型进行调用，不可以抽象。

八、super
1、子类构造方法会默认首先执行super()来调用父类的无参构造方法，如果父类没有无参构造方法，则必须显式调用父类的构造方法
2、通过super来调用父类的属性和方法

九、finalize方法：内存不足时触发垃圾回收，可以重写，但是有java虚拟机调用
Object类的equals方法等价于==，可以重写成深比较
Object类还提供线程同步相关方法wait、notify、notifyAll。

十、final关键字
修饰类：该类为最终类，不可被继承
修饰方法：该方法不能在子类中重写
修饰基本类型变量：只有一次赋值
修饰非基本类型（引用）：只能1次指向对象
常量指的是可以公开，直接访问，不会变化的值